"""init schema

Revision ID: 364081709abf
Revises: 
Create Date: 2025-09-20 21:07:31.430172

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '364081709abf'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('invite_codes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=64), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('allow_admin', sa.Boolean(), nullable=False),
    sa.Column('max_uses', sa.Integer(), nullable=True),
    sa.Column('used_count', sa.Integer(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('target_group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['target_group_id'], ['user_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('invite_codes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_invite_codes_code'), ['code'], unique=True)

    op.create_table('system_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=128), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('user_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('slug', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('enable_crawlers', sa.Boolean(), nullable=False),
    sa.Column('enable_files', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('user_groups', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_groups_slug'), ['slug'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=128), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('role', sa.String(length=32), nullable=False),
    sa.Column('is_root_admin', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('theme_name', sa.String(length=32), nullable=False),
    sa.Column('theme_primary', sa.String(length=16), nullable=False),
    sa.Column('theme_secondary', sa.String(length=16), nullable=False),
    sa.Column('theme_background', sa.String(length=16), nullable=False),
    sa.Column('is_dark_mode', sa.Boolean(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('invited_by_id', sa.Integer(), nullable=True),
    sa.Column('invite_code_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['user_groups.id'], ),
    sa.ForeignKeyConstraint(['invite_code_id'], ['invite_codes.id'], ),
    sa.ForeignKeyConstraint(['invited_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('api_keys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('local_id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=128), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('last_used_ip', sa.String(length=64), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'local_id', name='uq_api_keys_user_local_id')
    )
    with op.batch_alter_table('api_keys', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_api_keys_is_public'), ['is_public'], unique=False)
        batch_op.create_index(batch_op.f('ix_api_keys_key'), ['key'], unique=True)
        batch_op.create_index(batch_op.f('ix_api_keys_local_id'), ['local_id'], unique=False)

    op.create_table('crawlers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('local_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_heartbeat', sa.DateTime(), nullable=True),
    sa.Column('last_source_ip', sa.String(length=64), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('public_slug', sa.String(length=64), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_slug'),
    sa.UniqueConstraint('user_id', 'local_id', name='uq_crawlers_user_local_id')
    )
    with op.batch_alter_table('crawlers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_crawlers_is_public'), ['is_public'], unique=False)
        batch_op.create_index(batch_op.f('ix_crawlers_local_id'), ['local_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_crawlers_name'), ['name'], unique=False)

    op.create_table('file_api_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=128), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('allowed_ips', sa.Text(), nullable=True),
    sa.Column('allowed_cidrs', sa.Text(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('file_api_tokens', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_file_api_tokens_token'), ['token'], unique=True)

    op.create_table('invite_usages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('used_at', sa.DateTime(), nullable=False),
    sa.Column('ip_address', sa.String(length=64), nullable=True),
    sa.Column('invite_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['invite_id'], ['invite_codes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('crawler_access_links',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('slug', sa.String(length=64), nullable=False),
    sa.Column('target_type', sa.String(length=16), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('allow_logs', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('crawler_id', sa.Integer(), nullable=True),
    sa.Column('api_key_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['api_key_id'], ['api_keys.id'], ),
    sa.ForeignKeyConstraint(['crawler_id'], ['crawlers.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug', name='uq_crawler_access_slug')
    )
    with op.batch_alter_table('crawler_access_links', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_crawler_access_links_slug'), ['slug'], unique=True)

    op.create_table('crawler_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('last_heartbeat', sa.DateTime(), nullable=True),
    sa.Column('source_ip', sa.String(length=64), nullable=True),
    sa.Column('crawler_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['crawler_id'], ['crawlers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('file_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('storage_path', sa.String(length=255), nullable=False),
    sa.Column('original_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('content_type', sa.String(length=128), nullable=True),
    sa.Column('size_bytes', sa.Integer(), nullable=False),
    sa.Column('checksum_sha256', sa.String(length=64), nullable=True),
    sa.Column('visibility', sa.String(length=16), nullable=False),
    sa.Column('is_anonymous', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('download_count', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('owner_group_id', sa.Integer(), nullable=True),
    sa.Column('uploaded_by_user_id', sa.Integer(), nullable=True),
    sa.Column('uploaded_by_token_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_group_id'], ['user_groups.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by_token_id'], ['file_api_tokens.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('storage_path')
    )
    op.create_table('file_access_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=32), nullable=False),
    sa.Column('ip_address', sa.String(length=64), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('token_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['file_entries.id'], ),
    sa.ForeignKeyConstraint(['token_id'], ['file_api_tokens.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('log_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level', sa.String(length=16), nullable=False),
    sa.Column('level_code', sa.Integer(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('ts', sa.DateTime(), nullable=False),
    sa.Column('source_ip', sa.String(length=64), nullable=True),
    sa.Column('crawler_id', sa.Integer(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=True),
    sa.Column('api_key_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['api_key_id'], ['api_keys.id'], ),
    sa.ForeignKeyConstraint(['crawler_id'], ['crawlers.id'], ),
    sa.ForeignKeyConstraint(['run_id'], ['crawler_runs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('log_entries', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_log_entries_level_code'), ['level_code'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('log_entries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_log_entries_level_code'))

    op.drop_table('log_entries')
    op.drop_table('file_access_logs')
    op.drop_table('file_entries')
    op.drop_table('crawler_runs')
    with op.batch_alter_table('crawler_access_links', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_crawler_access_links_slug'))

    op.drop_table('crawler_access_links')
    op.drop_table('invite_usages')
    with op.batch_alter_table('file_api_tokens', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_file_api_tokens_token'))

    op.drop_table('file_api_tokens')
    with op.batch_alter_table('crawlers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_crawlers_name'))
        batch_op.drop_index(batch_op.f('ix_crawlers_local_id'))
        batch_op.drop_index(batch_op.f('ix_crawlers_is_public'))

    op.drop_table('crawlers')
    with op.batch_alter_table('api_keys', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_api_keys_local_id'))
        batch_op.drop_index(batch_op.f('ix_api_keys_key'))
        batch_op.drop_index(batch_op.f('ix_api_keys_is_public'))

    op.drop_table('api_keys')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_id'))

    op.drop_table('users')
    with op.batch_alter_table('user_groups', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_groups_slug'))

    op.drop_table('user_groups')
    op.drop_table('system_settings')
    with op.batch_alter_table('invite_codes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_invite_codes_code'))

    op.drop_table('invite_codes')
    # ### end Alembic commands ###
